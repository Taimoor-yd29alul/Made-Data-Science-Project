pipeline Temperature {

      Temperatureextractor
            ->TemperatureZipInterpreter
            ->TemperatureFilePicker
            ->TemperaturetextFileInterpreter
            ->TemperatureCsvInterpreter
            ->Temperature_DataRange
            ->ColumnDeleter
            ->NameHeaderWriter
            ->TemperatureTableInterpreter
            ->temperatureTransformer
            ->BatterytemperatureTransformer
            ->TemperatureSQLLoader;


      block Temperatureextractor oftype HttpExtractor {
            url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
      }

      block TemperatureZipInterpreter oftype ArchiveInterpreter {
            archiveType: "zip";
      }

      block TemperatureFilePicker oftype FilePicker {
            path: "./data.csv";
      }

      block TemperaturetextFileInterpreter oftype TextFileInterpreter { }

      block TemperatureCsvInterpreter oftype CSVInterpreter {
            delimiter: ';';
      }

      block Temperature_DataRange oftype CellRangeSelector {
            select: range A1:J*;
      }

      block ColumnDeleter oftype ColumnDeleter {
            delete: [ column F, column G, column H, column I
            ];
      }

      block NameHeaderWriter oftype CellWriter {
            at: range A1:F1;

            write: [
                  "id",
                  "producer",
                  "model",
                  "month",
                  "temperature",
                  "battery_temperature"
            ];
      }

      block TemperatureTableInterpreter oftype TableInterpreter {
            header: true;
            columns:  [
                  'id' oftype Id,
                  'producer' oftype text,
                  'model' oftype text,
                  'month' oftype month,
                  'temperature' oftype decimal,
                  'battery_temperature' oftype decimal
            ];
      }

      transform CelsiusToFahrenheit {
            from Celsius oftype decimal;
            to Fahrenheit oftype decimal;

            Fahrenheit: (Celsius * 9/5) + 32;
      }

      block temperatureTransformer oftype TableTransformer {
            inputColumns: [
                  'temperature'
            ];
            outputColumn: 'temperature';
            uses: CelsiusToFahrenheit;
      }

      block BatterytemperatureTransformer oftype TableTransformer {
            inputColumns: [
                  'battery_temperature'
            ];
            outputColumn: 'battery_temperature';
            uses: CelsiusToFahrenheit;
      }

      block TemperatureSQLLoader oftype SQLiteLoader {
            table: "temperatures";
            file: "./temperatures.sqlite";
      }



      valuetype Id oftype integer {
            constraints: 
             [
                  abovezero
            ];
      }

      valuetype month oftype integer {
            constraints: 
             [
                  between1and12
            ];
      }


      constraint abovezero on integer: value>0;
      constraint between1and12 on integer: value>0 and value<13;
}